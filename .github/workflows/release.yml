name: Release

on:
  push:
    branches: [ "main" ]
    paths:
      - 'build/packages/portoshim/debian/changelog'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build_deb:
    strategy:
      matrix:
        os: [ ubuntu-20.04, ubuntu-22.04 ]
        arch: [ amd64 ]

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3

    - name: Dependencies installation
      run: |
        sudo apt update
        sudo apt install -y make dpkg-dev debhelper pkg-config

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: stable
        cache: false

    - name: Get Go environment
      id: go-env
      shell: bash
      run: |
        echo "cache=$(go env GOCACHE)" >> $GITHUB_ENV
        echo "modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.cache }}
          ${{ env.modcache }}
        key: ${{ runner.os }}-${{ runner.arch }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ runner.arch }}-go-

    - name: Copy debian directory
      run: |
        cp -r ./build/packages/portoshim/debian ./debian

    - name: Set environment variables
      run: |
        echo "VERSION=$(sed -nE 's#.*\((.*)\).*#\1#p;q' debian/changelog)" >> $GITHUB_ENV
        case ${{matrix.os}} in
          ubuntu-20.04)
            echo "UBUNTU_NAME=focal" >> $GITHUB_ENV
            ;;
          ubuntu-22.04)
            echo "UBUNTU_NAME=jammy" >> $GITHUB_ENV
            ;;
        esac

    - name: Build
      run: make

    - name: Prepare archive
      run: |
        mkdir -p ${{github.workspace}}/build/bin
        cp ${{github.workspace}}/portoshim ${{github.workspace}}/build/bin
        cp ${{github.workspace}}/logshim ${{github.workspace}}/build/bin
        tar czvf portoshim_${{env.UBUNTU_NAME}}_v${{env.VERSION}}_${{matrix.arch}}.tgz -C ${{github.workspace}}/build/bin .

    - name: Upload archive
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: portoshim_${{env.UBUNTU_NAME}}_v${{env.VERSION}}_${{matrix.arch}}.tgz

    - name: Build Debian package
      run: |
        echo Portoshim version: ${{env.VERSION}}
        echo Ubuntu name: ${{env.UBUNTU_NAME}}
        dpkg-buildpackage -b --target-arch ${{matrix.arch}}
        mv ../portoshim_${{env.VERSION}}_${{matrix.arch}}.deb portoshim_${{env.UBUNTU_NAME}}_${{env.VERSION}}_${{matrix.arch}}.deb

    - name: Upload Debian package
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: portoshim_${{env.UBUNTU_NAME}}_${{env.VERSION}}_${{matrix.arch}}.deb

  release:
    runs-on: ubuntu-latest
    needs: build_deb
    permissions: write-all
    steps:
    - name: Download Debian package
      uses: actions/download-artifact@v2
      with:
        name: packages

    - name: Get version
      run: |
        filename=$(ls portoshim_* | head -n 1)
        filename=${filename#portoshim_*_}
        VERSION=${filename%%_*}
        echo Version: $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: v${{env.VERSION}}
        release_name: Release v${{env.VERSION}}
        draft: false
        prerelease: false

    - name: Upload focal (22.04) deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./portoshim_focal_${{env.VERSION}}_amd64.deb
        asset_name: portoshim_focal_${{env.VERSION}}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload focal (20.04) tgz
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./portoshim_focal_v${{env.VERSION}}_amd64.tgz
        asset_name: portoshim_focal_v${{env.VERSION}}_amd64.tgz
        asset_content_type: application/gzip

    - name: Upload jammy (22.04) deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./portoshim_jammy_${{env.VERSION}}_amd64.deb
        asset_name: portoshim_jammy_${{env.VERSION}}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload jammy (22.04) tgz
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./portoshim_jammy_v${{env.VERSION}}_amd64.tgz
        asset_name: portoshim_jammy_v${{env.VERSION}}_amd64.tgz
        asset_content_type: application/gzip
